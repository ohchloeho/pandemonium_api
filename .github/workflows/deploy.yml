name: Pandemonium API CI/CD

on:
  push:
    branches:
      - main
      - test  # Include test branch for running build and tests only

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Set up Docker cache
      - name: Set up Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      # Step 4: Build the Docker image with Mosquitto and your Go application
      - name: Build Docker image
        env:
          NEXTCLOUD_USERNAME: ${{ secrets.NEXTCLOUD_USERNAME }}
          NEXTCLOUD_PASSWORD: ${{ secrets.NEXTCLOUD_PASSWORD }}
        run: |
          docker build -t pandemonium_api .

      # Step 6: Optional - Log in to Docker Hub
      - name: Log in to Docker Hub (optional)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Optional - Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker tag pandemonium_api ${{ secrets.DOCKER_USERNAME }}/pandemonium_api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/pandemonium_api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1: Checkout code again in deploy step
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install Tailscale and connect (Optional step for secure connection)
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }}

      # Step 3: Ensure Tailscale connection is active
      - name: Verify Tailscale connection
        run: |
          sudo tailscale status

      # Step 5: SSH into the server, stop any running container, and deploy the new container
      - name: Deploy Docker container to Server via SSH (Tailscale)
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_TAILSCALE_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

            docker pull ${{ secrets.DOCKER_USERNAME }}/pandemonium_api:latest

            docker stop pandemonium_api || true
            docker rm pandemonium_api || true

            docker run -d --name pandemonium_api --network pandemonium_network -p 8080:8080 -p 1883:1883 \
              -e NEXTCLOUD_USERNAME=${{ secrets.NEXTCLOUD_USERNAME }} \
              -e NEXTCLOUD_PASSWORD=${{ secrets.NEXTCLOUD_PASSWORD }} \
              ${{ secrets.DOCKER_USERNAME }}/pandemonium_api:latest

